* Взаимодействие с сервлетом

** Общие данные

*** Краткое описание работы калькулятора

Калькулятор заказа страховки рассчитывает стоимость страховки и
заказать страховку в онлайн.  Работа калькулятора организована в виде
пошаговой процедуры расчета, которая включает три шага:

1) Ввод минимального набора данных для расчета и показа страховых
   предложений. Переход к шагу 2) по нажатию кнопки "Считать"

2) Показ таблицы страховых предложений и стоимости предложений,
   рассчитанных на основе данных, введенных в шаге 1). В шаге 2)
   возможно выполнение следующих действий:

   2.1) Ввод дополнительных данных и нажатие кнопки "Пересчитать", при
   этом таблица страховых предложений будет перерассчитана с учетом
   дополнительно введенных данных. После нажатия кнопки "Пересчитать"
   остаемся на шаге 2).

   2.2) Переход к шагу 1) калькулятора для изменения начального
   минимального набора данных. Переход к шагу 1) происходит при
   нажатии кнопки "Назад"

   2.3) Переход к шагу третьему шагу калькулятора. Для каждого
   страхового предложения в таблице предложений имеется кнопка
   "Заказать". При нажатии на нее переходим к третьему шагу
   калькулятора.

3) На третьем шаге калькулятора выводится бланк заказа страховки,
   заполненный данными, полученными в шагах 1) и 2)

** Описание работы программного обеспечения

*** Программные модули, взаимодействующие при работе калькулятора

1) База данных (Имя: inservlet)
2) Программное обеспечение сервера сайта, выполненное на базе Django
3) Программное обеспечение текущей страницы, загруженной в браузер,
   выполнено на базе JS/JQuery
4) Программное обеспечение рассчета данных страхового предложения,
   написанное на Java в виде сервлета. В далеьнейшем буем называть его
   просто просто сервлет.

*** Алгоритм взаимодействия программного обеспечения с сервлетом

1) ПО сервера создают вебстраницу с HTML формой. Данные для создания
   полей формы частично запрограммированы в код создания формы,
   частично получаются по запросам из базы данных.

2) Часть данных для создания полей формы получается из базы данных
   непосредственно во время заполнения формы пользователем, на основе
   уже выбранных данных. Это делается с испольованием AJAX.

3) После заполнения пользователем формы и нажатия кнопок, "Считать"
   или "Пересчитать", данные из заполненных полей формы отправляются
   сервлету. Формат передачи HTTP запрос типа POST.

4) Получив данные, сервлет возвращает ответ. Ответ приходит в формате
   JSON.

** Формат запроса к сервлету

Запрос передается в виде POST запроса. 

Чекбоксы передаются в виде 'on' в случае, если чекбокс отмечен, или в
виде пустой строки, если чекбокс не отмечен.

Числа передаются в виде строки, например числу 100 соответствует строка '100'.

Поля запроса:

Поля минимального набора данных (Шаг 1) калькулятора):

| Название поля      |                            | Источник |                    |
|                    |                            | данных   |                    |
|--------------------+----------------------------+----------+--------------------|
| mark               | 'Марка автомобиля'         | БД       |                    |
| model              | 'Модель автомобиля'        | БД       |                    |
| model_year         | 'Год выпуска'              | БД       |                    |
| power              | 'Мощность'                 | БД       |                    |
| city               | 'Регистрация собственника' | БД       |                    |
| wheel              | 'Руль'                     |          | 'right' или 'left' |
| credit             | 'Кредит'                   |          |            'on'/'' |
| age                | 'Возраст'                  |          |               0-18 |
| experience_driving | 'Стаж вождения'            |          |               0-49 |
| price              | 'Стоимость'                | БД       |                    |

Поля дополнительного набора данных (Шаг 2 калькулятора):

| standart_deductible                 | 'Стандартная франшиза'                                            | 0 до 50000 с шагом в 5000 |
| second_deductible                   | 'Франшиза со второго случая'                                      | 0 до 50000 с шагом 5000   |
| civil_liability                     | 'Гражданскую ответственность (дополнительно к полису ОСАГО)'      | 'on'/''                   |
| factor_price                        | 'Цена'                                                            | 'on'/''                   |
| factor_easepay                      | 'Простота выплат'                                                 | 'on'/''                   |
| factor_insuranceterms               | 'Условия страхования'                                             | 'on'/''                   |
| factor_qualitysupport               | 'Качество информационной поддержки'                               | 'on'/''                   |
| factor_reputation                   | 'Репутация компании'                                              | 'on'/''                   |
| factor_accessibility                | 'Доступность компании'                                            | 'on'/''                   |
| factor_service                      | 'Сервис'                                                          | 'on'/''                   |
| damage_full_destruction             | 'Возмещать ущерб только при полной гибели или угоне автомобиля'   | 'on'/''                   |
| not_assure_theft                    | 'Не страховать автомобиль от угона'                               | 'on'/''                   |
| burglar_alarm                       | 'Охранная система автомобиля '                                    |  Выбор типа системы       |
| single_payment_of_the_policy        | 'Единовременная оплата полиса'                                    | 'on'/''                   |
| repair_direction_company            | 'Ремонт по направлению страховой компании'                        | 'on'/''                   |
| repair_official_dealer              | 'Ремонт у официального дилера по направлению страховой компании'  | 'on'/''                   |
| repair_engineering_centre           | 'Ремонт в техническом центре по вашему выбору'                    | 'on'/''                   |
| payment_on_accounting               | 'Выплата деньгами по калькуляции'                                 | 'on'/''                   |
| payment_on_accounting_deterioration | 'Выплата деньгами по калькуляции с учетом износа запасных частей' | 'on'/''                   |
| payment_on_accounting_deterioration | 'Выплата деньгами по калькуляции с учетом износа запасных частей' | 'on'/''                   |
| glass_elements_one_year             | 'Стекла и стеклянные элементы. Один раз в год'                    | 'on'/''                   |
| glass_elements_without_restriction  | 'Стекла и стеклянные элементы. Без ограничения'                   | 'on'/''                   |
| repair_3_one_year                   | 'Ремонт в пределах 3%. Один раз в год'                            | 'on'/''                   |
| repair_5_two_year                   | 'Ремонт в пределах 5%. Два раза в год'                            | 'on'/''                   |
| evacuation                          | 'Эвакуация автомобиля к месту стоянки или ремонта'                | 'on'/''                   |
| technical_assistance                | 'Техническая попощь'                                              | 'on'/''                   |
| call_taxi                           | 'Вызов такси'                                                     | 'on'/''                   |
| lease_car                           | 'Аренда автомобиля'                                               | 'on'/''                   |
| departure_two_player_dtp            | 'Выезд только на ДТП с двумя и более участниками. Сбор справок'   | 'on'/''                   |
| departure_all_dtp                   | 'Выезд на любые ДТП. Сбор справок'                                | 'on'/''                   |
| health_driver_and_passenger         | 'Здоровье водителя и пассажиров'                                  | 'on'/''                   |
| kasko_plus_osago                    | 'Купить полис КАСКО вместе с ОСАГО'                               | 'on'/''                   |

** Формат ответа сервлета

Сервлет присылает данные в формате JSON. Ниже приведен образец данных,
присылаемых сервлетом:

{'status':'OK',			                                 # OK|NOK
 'info':[{'full_name':'TestCompany-1',                           # Массив информации
          'parameters':{'Evacuator':'on',			 #
                        'TheEmergencyCommissioner':'on',	 #
                        'PaymentWithoutInquiries':'on',		 #
                        'GatheringOfInquiries':'on',		 #
                        'TheModularInsuranceSum':'on',		 #
                        'NewForTheOld':'on',			 #
                        'TheObligatoryFranchize':'on',		 #
                        'AlternativenessOfFormsOfPayment':'on',	 #
                        }},

** Проблемы при работе с сервлетом

При некоторых наборах данных, сервлет не возвращает
ответ. Т.е. отправляем запрос, сервлет не отвечает, а так и висит
неопределенное время.

** URL сервлета

'http://localhost:8080/ServerIF/MatrixIF'
'http://www.polisbook.ru:8080/ServerIF/MatrixIF'

** Функции для работы с сервлетом (Заглушка здесь)

Функции обращения к сервлету находятся в файле
insurance/apps/calc/utils_servlet.py

В связи с неустойчивой работой сервлета, была создана заглушка,
возвращающаяя фиксированный набор данных. Замещение функции обращеняи
к сервлету заглушкой производится в зависимости от значения переменной
settings.SERVLET_FAKE (файл local_settings.py)

Функция обертка:
servlet_request(url,data,dbg=False):

Функция обращения к сервлету:
servlet_request_real(url,data,dbg=False)

Функция-заглушка:
servlet_request_fake(url,data,dbg=False)

*** Работа с базой данных
Работа с базой данных ведется при помощий функций, которые находятся в
файле project/Insurance/insurance/apps/calc/utils_db.py

** Замечания

В шаге 1) калькулятора данные для полей mark, model, model_year
передаются в JavaScript страницы через темплейт, а данные для полей 
power и price через AJAX.

Так получилось потому, что интерфейс находится в процессе перехода
полностью на AJAX, данные полей mark, model, model_year тоже нужно
будет перевести на получение через AJAX.

